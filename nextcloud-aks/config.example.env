##
# This is an example configuration file for the scripts in this folder.
#
# You must tailor it to meet your needs, or your installation of Nextcloud will
# fail.
#
# @author Guy Elsmore-Paddock (guy@inveniem.com)
# @copyright Copyright (c) 2019, Inveniem
# @license GNU AGPL version 3 or any later version
#

##
# The Azure region in which resources should be provisioned.
#
LOCATION="West US 2"

##
# Which of two possible configurations are used for running Nextcloud:
#  - `apache`: Pods consist of a single container that runs PHP on Apache with
#    `mod_php`.
#
#  - `fpm-nginx`: Pods consist of two containers; one runs PHP on php-fpm and
#    the other exposes it via an nginx reverse proxy that also serves-up
#    static content.
#
POD_TYPE="apache"

##
# The resource group in which the AKS instance is deployed, NOT the resource
# group that AKS manages for all of its resources.
#
KUBE_RESOURCE_GROUP="my-kube-parent-resource-group"

##
# The name of the AKS resource within your Azure account.
#
KUBE_NAME="my-kube-instance"

##
# The name and hostname of your Docker registry.
#
# By default, this is configured for Azure Container Registry. Feel free to
# modify REGISTRY_HOST if this is not the case.
#
REGISTRY_NAME="myregistry"
REGISTRY_HOST="${REGISTRY_NAME}.azurecr.io"

##
# The desired name for a new service principle that will have access to
# the Docker registry identified above. This MUST be unique within the AD
# tenant.
#
REGISTRY_SERVICE_PRINCIPLE_NAME="my-kube-acr"

##
# The space-separated name of each hostname from which Nextcloud should be
# accessible.
#
# This must accurately match each of the hostnames you are configuring for the
# service, or you will not be able to access your Nextcloud installation after
# deployment without having to SSH-in to modify your config.php file directly.
NEXTCLOUD_TRUSTED_DOMAINS='nextcloud1.example.com nextcloud2.example.com'

##
# The credentials for the Nextcloud admin account to create after deployment.
#
NEXTCLOUD_ADMIN_USER="NextcloudAdmin"
NEXTCLOUD_ADMIN_PASSWORD="NextcloudAdminPassword"

##
# The download URLs from the Nextcloud App Store to any custom apps you want in
# available in the deployed image.
#
NEXTCLOUD_CUSTOM_APPS=(
    'https://github.com/nextcloud/files_antivirus/releases/download/v2.0.0/files_antivirus.tar.gz'
    'https://github.com/gino0631/nextcloud-metadata/releases/download/v0.8.0/metadata.tar.gz'
    'https://github.com/nextcloud/twofactor_totp/releases/download/v2.1.0/twofactor_totp.tar.gz'
    'https://github.com/nextcloud/user_external/releases/download/v0.5.0/user_external.tar.gz'
)

##
# The hostname, database, and access credentials for the Nextcloud MySQL
# database.
#
# The database must already exist, with the appropriate GRANT permissions,
# before attempting to deploy Nextcloud. The `./drop_nextcloud_db.sh` script
# can be used to "clean out" and re-create this database, as needed when testing
# out deployments.
#
MYSQL_HOST="my-live.mysql.database.azure.com"
MYSQL_DATABASE="nextcloud"
MYSQL_USER="nextcloud@my-live"
MYSQL_PASSWORD="MySQLPassword"

##
# The resource group in which the storage account being used by Nextcloud should
# be automatically provisioned.
#
STORAGE_RESOURCE_GROUP="my-nextcloud-storage"

##
# The name of the storage account resource to create.
#
STORAGE_ACCOUNT_NAME="mynextcloud"

##
# An array of the names of each of the *storage* containers (not to be confused
# with Docker containers) that should be provisioned on Azure Blob storage.
#
STORAGE_BLOB_CONTAINERS=(
    'nextcloud-config'
)

##
# An array of the names of each of the shares that should be provisioned on
# Azure Files storage.
#
STORAGE_FILE_SHARES=(
    'nextcloud-data'
    'client1'
    'client2'
    'client3'
)

##
# The name of the secret within Kubernetes that will be created and referenced
# for accessing blob containers on the Nextcloud storage account.
#
# This must be a unique secret name that is not shared with any other
# application running on the Kubernetes cluster.
#
KUBE_BLOB_STORAGE_ACCOUNT_SECRET="nextcloud-storage-blob-creds"

##
# The name of the secret within Kubernetes that will be created and referenced
# for accessing Azure Files shares on the Nextcloud storage account.
#
# This must be a unique secret name that is not shared with any other
# application running on the Kubernetes cluster.
#
KUBE_FILES_STORAGE_ACCOUNT_SECRET="nextcloud-storage-azure-files-creds"

##
# The name of the secret within Kubernetes that will be created and referenced
# for accessing the Docker registry (usually ACR).
#
# This must be a unique secret name that is not shared with any other
# application running on the Kubernetes cluster.
#
ACR_DOCKER_CREDS_SECRET="nextcloud-acr-docker-creds"
