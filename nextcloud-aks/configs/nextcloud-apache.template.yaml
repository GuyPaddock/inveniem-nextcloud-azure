##
# Kubernetes deployment configuration for running Nextcloud on Apache with
# `mod_php`.
#
# @author Guy Elsmore-Paddock (guy@inveniem.com)
# @copyright Copyright (c) 2019, Inveniem
# @license GNU AGPL version 3 or any later version
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: backend-nextcloud
  template:
    metadata:
      labels:
        app: backend-nextcloud
        role: nextcloud-backend
    spec:
      containers:
        # Container: The Apache-based Nextcloud backend
        - name: backend-nextcloud-apache
          image: "${REGISTRY_HOST}/inveniem/nextcloud-apache:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1500m
              memory: 512Mi
          volumeMounts:
            - name: volume-nextcloud-app
              mountPath: /var/www/html
            - name: volume-nextcloud-config
              mountPath: /var/www/html/config
            # HACK: Until AKS supports pod presets, we have to kludge the dynamic
            # mounts in via a variable expansion. Do not modify the last line of
            # this comment; it gets expanded and replaced automatically when this
            # file is pre-processed. Remove this entire comment when switching over
            # to using pod presets.
            #
            # ${FILE_SHARE_VOLUME_MOUNT_LINES}
          env:
            - name: NEXTCLOUD_TRUSTED_DOMAINS
              valueFrom:
                configMapKeyRef:
                  name: nextcloud-config
                  key: trusted_domains
            - name: NEXTCLOUD_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_ADMIN_CREDS_SECRET}"
                  key: username
            - name: NEXTCLOUD_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_ADMIN_CREDS_SECRET}"
                  key: password
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET}"
                  key: hostname
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET}"
                  key: database
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET}"
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET}"
                  key: password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_NEXTCLOUD_MYSQL_CREDS_SECRET}"
                  key: password
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_REDIS_KEY_SECRET}"
                  key: hostname
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_REDIS_KEY_SECRET}"
                  key: port
            - name: REDIS_KEY
              valueFrom:
                secretKeyRef:
                  name: "${KUBE_REDIS_KEY_SECRET}"
                  key: key
        # Container: ClamAV
        - name: backend-clamav
          image: "mkodockx/docker-clamav:latest"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1000m
              memory: 2048Mi
          volumeMounts:
            # HACK: Until AKS supports pod presets, we have to kludge the dynamic
            # mounts in via a variable expansion. Do not modify the last line of
            # this comment; it gets expanded and replaced automatically when this
            # file is pre-processed. Remove this entire comment when switching over
            # to using pod presets.
            #
            # ${FILE_SHARE_VOLUME_MOUNT_LINES}
      imagePullSecrets:
        # NOTE: This secret is added by `setup_aks_acr_service_principal.sh`.
        - name: "${ACR_DOCKER_CREDS_SECRET}"
      volumes:
        # Ephemeral volume that contains the loaded Nextcloud software
        - name: volume-nextcloud-app
          emptyDir: {}
        # Remaining volumes are handled through Persistent Volume Claims
        - name: volume-nextcloud-config
          persistentVolumeClaim:
            claimName: claim-nextcloud-config
        # HACK: Until AKS supports pod presets, we have to kludge the dynamic
        # mounts in via a variable expansion. Do not modify the last line of
        # this comment; it gets expanded and replaced automatically when this
        # file is pre-processed. Remove this entire comment when switching over
        # to using pod presets.
        #
        # ${FILE_SHARE_VOLUME_LINES}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-nextcloud-lb
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: backend-nextcloud
